jobs:
  - script: >
      organizationFolder('TEST') {
        description("Bitbucket orga folder configured with JCasC")
        displayName('Testing Project')
        // "Projects"
        organizations {
          bitbucket {
            repoOwner("TEST")
            credentialsId("git-credentials")
            traits {
              sourceWildcardFilter {
                // Space-separated list of project name patterns to consider.
                includes("*")
                // Space-separated list of project name patterns to ignore even if matched by the includes list.
                excludes("*-deprecated-*")
              } 
              cleanBeforeCheckout {
                extension {
                  deleteUntrackedNestedRepositories(true)
                }
              }
              bitbucketBranchDiscovery {
                // Determines which branches are discovered.
                strategyId(3)
              } 
              submoduleOption {
                extension {
                  // Use credentials from the default remote of the parent project.
                  parentCredentials(true)
                  // Retrieve all submodules recursively (uses '--recursive' option which requires git>=1.6.5)
                  recursiveSubmodules(true)
                }
              }
              bitbucketBranchCommitSkipTrait()
            }
          }
        }
        // Sets the orphaned branch strategy.
        orphanedItemStrategy {
          // Trims dead items by the number of days or the number of items.
          discardOldItems {
            // Sets the number of days to keep old items.
            daysToKeep(30)
            // Sets the number of old items to keep.
            numToKeep(15)
          }
        }
        triggers {
          periodicFolderTrigger {
            // The maximum amount of time since the last indexing that is allowed to elapse before an indexing is triggered.
            interval("12h")
          } 
        }
        properties {
          jiraFolderProperty {
            sites {
              jiraSite {
                // Specify the root URL of your Jira installation, like http://issues.apache.org/jira/.
                url("https://ggarcia24.atlassian.net")
                // Connection timeout for Jira REST API calls (in seconds).
                timeout(30)
                // If this is unchecked, issues will be only updated if the build is SUCCESSful or UNSTABLE.
                updateJiraIssueForAllStatus(false)
                // You can define your own pattern to search for Jira issue ids in the SCM logs.
                userPattern("TP1")
              }
            }
          }
        }
      }
